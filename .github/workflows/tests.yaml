name: Unit Tests

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - "[0-9]+.0"
    paths:
      - "**/workflows/**"
      - "**/resources/**"
      - "Dockerfile"

env:
  HUB_BASE: iterativodo
  GIT_BASE: ghcr.io/iterativo-git
  GCR_BASE: gcr.io/iterativo

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.GIT_BASE }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_SHA_SHORT }}
          cache-from: type=registry,ref=${{ env.GIT_BASE }}/dockerdoo:${{ env.GITHUB_REF_SLUG }}
          cache-to: type=inline

  test:
    name: Unit Tests
    needs: ["build"]
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:12-alpine
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Odoo tests
        run: |
          docker pull ${{ env.GIT_BASE }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_SHA_SHORT }}
          docker run -e RUN_TESTS -e LOG_LEVEL -e EXTRA_MODULES -e PGHOST --network="host" --name odoo -t ${{ env.GIT_BASE }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_SHA_SHORT }}
        env:
          RUN_TESTS: "1"
          LOG_LEVEL: test
          EXTRA_MODULES: base
          PGHOST: localhost

  push-github:
    name: Push to Github Container Registry
    needs: ["build", "test"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout local
        uses: actions/checkout@v2

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.GIT_BASE }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_REF_SLUG }}
          cache-from: type=registry,src=${{ env.GIT_BASE }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_REF_SLUG }}
          cache-to: type=inline

  push-gcp:
    name: Push to Google Container Registry
    needs: ["build", "test"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout local
        uses: actions/checkout@v2

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GKE_SA_KEY }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.GCR_BASE}}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_REF_SLUG }}
          cache-from: type=registry,src=${{ env.GCR_BASE}}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_REF_SLUG }}
          cache-to: type=inline

  push-docker:
    name: Push to Docker Hub
    needs: ["build", "test"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout local
        uses: actions/checkout@v2

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.HUB_BASE }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_REF_SLUG }}
          cache-from: type=registry,src=${{ env.HUB_BASE }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ env.GITHUB_REF_SLUG }}
          cache-to: type=inline
